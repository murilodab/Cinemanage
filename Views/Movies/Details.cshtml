@using Cinemanage.Models.Database
@using Cinemanage.Services.Interfaces
@inject IImageService _imageService
@model Movie


@{
    ViewData["Title"] = "Movie Details";
}

<section>
    <div class="row">
        <div class="col-sm-12 col-md-6">
            <div class="row">
                <img src="@_imageService.DecodeImage(Model.Poster, Model.PosterType)" class="w-100" alt="..." />
            </div>

            <div class="row">
                <button class="btn btn-lg w-100 btn-danger" data-bs-toggle="modal" data-bs-target="#trailer">
                    Watch Trailer
                </button>
            </div>
        </div>

        <div class="col-sm-12 col-md-6">
            <div class="row">
                <div class="col h5">
                    <span class="mr-2">TITLE: </span> @Model.Title
                </div>
            </div>

            <hr />

            <div class="row">
                <div class="col h5">
                    <span class="mr-2">RELEASED: </span> @Model.ReleaseDate.ToString("MMM dd, yyyy");
                </div>
            </div>
            <hr />

            <div class="row">
                <div class="col h5">
                    <span class="mr-2">RATING: </span> @Model.Rating
                </div>
            </div>

            <div class="row">
                <div class="col h5">
                    <span class="mr-2">REVIEWS: </span> @Model.VoteAverage.ToString("0.0") / 10
                </div>
            </div>
            <hr />

            <div class="row mt-3 mb-2">
                <div class="col">
                    <span class="h5">OVERVIEW: </span>
                </div>
            </div>

            <div class="row">
                <div class="col">
                    <span class="h5 ml-4">@Model.Overview</span>
                </div>
            </div>

            <div class="row">
                <div class="col h5">
                    <span class="mr-2">WHERE TO WATCH: </span>
                </div>
            </div>

            @foreach (var provider in Model.Watch_Provider)
            {
                <div class="row">
                    <div class="col">

                        <span>@provider.Name</span>

                        <img src="@provider.LogoUrl" class="img-fluid" width="80px"alt="provider-logo">



                    </div>
                </div>
            }

        </div>



    </div>

    <div class="row">
        <div class="col">
            <span class="h5">STARRING: </span>
        </div>
    </div>

    @foreach (var actor in Model.Cast.Take(5))
    {
        <div class="row">
            <div class="col">
                <div class="card mb-3">
                    <div class="row no-gutters">
                        <div class="col-md-2">
                            <img src="@actor.ImageUrl" class="img-fluid" style="width:10rem;" alt="cast-image">
                        </div>
                        <div class="col-md-10">
                            <div class="card-body">
                                <h5 class="card-title"><a asp-action="Details" asp-controller="Actors" asp-route-id="@actor.CastId">Name: @actor.Name</a></h5>
                                <p class="card-text">Character: @actor.Character</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</section>


<!--Youtube Trailer Modal -->
<div class="modal fade" id="trailer" tabindex="-1" aria-labelledby="trailerLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fs-5" id="trailerLabel">@Model.Title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                </button>
            </div>
            @* <div class="modal-body text-center"> *@
            <div class="ratio ratio-16x9">
                @{
                    var source = "";
                    bool flag = true;
                    //Isolating the Key from the base url to use it as embed source
                    if(Model.TrailerUrl is not null)
                    {
                        var key = Model.TrailerUrl.Split("=").Last();
                        source = $"https://www.youtube.com/embed/{key}";
                        flag = false;
                    }
                    else
                    {
                        source = $"https://static.vecteezy.com/system/resources/thumbnails/023/103/916/small/not-available-rubber-stamp-seal-vector.jpg";
                    }
                    // var key = Model.TrailerUrl.Split("=").Last();
                    // var source = $"https://www.youtube.com/embed/{key}";
                }

                <iframe class="text-center" src="@source" type="text/html"></iframe>
            </div>
            @*  </div> *@

        </div>
    </div>
</div>




